// Generated by CoffeeScript 1.6.3
(function() {
  var c;

  c = angular.module('victory.controller', []);

  c.controller('NavigationCtrl', function($scope) {
    /*
    Navigation Controller
    */

    var delay;
    delay = function(ms, func) {
      return setTimeout(func, ms);
    };
    return $scope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {
      $scope.select = toState.name;
      $('.modal.in').modal('hide');
      return delay(200, function() {
        return $('#js_navigation li.select').mouseover();
      });
    });
  });

  c.controller('IndexCtrl', function($scope, $state) {
    /*
    /
    */

    $scope.title = victory.titleSuffix;
    if (!victory.user.isLogin) {
      return location.href = '#/login';
    }
  });

  c.controller('LoginCtrl', function($scope, $state) {
    /*
    /login
    */

    return $scope.loginUrl = victory.loginUrl;
  });

  c.controller('SettingsMenuCtrl', function($scope, $state) {
    /*
    The controller of the settings menu
    */

    return $scope.active = $state.current.name;
  });

  c.controller('SettingsCtrl', function($scope, $state) {
    /*
    /settings
    */

    return location.href = '#/settings/applications';
  });

  c.controller('SettingsApplicationsCtrl', function($scope, $http) {
    /*
    /settings/applications
    */

    $scope.getApplications = function() {
      /*
      get applications
      */

      return victory.ajax($http, {
        url: '/settings/applications',
        error: function() {
          return console.log('error');
        },
        success: function(data) {
          var item, _i, _len, _ref;
          _ref = data.items;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            item = _ref[_i];
            item.newName = item.name;
            item.newDescription = item.description;
          }
          return $scope.items = data.items;
        }
      });
    };
    $scope.addApplication = function() {
      /*
      add an application
      */

      return victory.ajax($http, {
        method: 'post',
        url: '/settings/applications',
        data: {
          name: $scope.name,
          description: $scope.description
        },
        error: function(data, status) {
          if (status === 400 && data) {
            return $scope.errors = data;
          }
        },
        success: function() {
          $scope.name = '';
          $scope.description = '';
          $('.modal.in').modal('hide');
          return $scope.getApplications();
        }
      });
    };
    $scope.updateApplication = function(id) {
      /*
      update the application.
      */

      var updateItem, x;
      updateItem = ((function() {
        var _i, _len, _ref, _results;
        _ref = $scope.items;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          x = _ref[_i];
          if (x.id === id) {
            _results.push(x);
          }
        }
        return _results;
      })())[0];
      return victory.ajax($http, {
        method: 'put',
        url: "/settings/applications/" + id,
        data: {
          name: updateItem.newName,
          description: updateItem.newDescription
        },
        error: function(data, status) {
          if (status === 400 && data) {
            return updateItem.errors = data;
          }
        },
        success: function() {
          $('.modal.in').modal('hide');
          return $scope.getApplications();
        }
      });
    };
    $scope.deleteApplication = function(id) {
      /*
      delete the application
      */

      return victory.ajax($http, {
        method: 'delete',
        url: "/settings/applications/" + id,
        error: function(data, status) {
          return console.log('error');
        },
        success: function() {
          $('.modal.in').modal('hide');
          return $scope.getApplications();
        }
      });
    };
    return $scope.getApplications();
  });

  c.controller('SettingsUsersCtrl', function($scope, $state) {
    /*
    /settings/users
    */

  });

  c.controller('SettingsProfileCtrl', function($scope, $state) {
    /*
    /settings/profile
    */

  });

  c.controller('CrashGroupsCtrl', function($scope, $state) {
    /*
    /crash_groups
    */

  });

  c.controller('ExceptionGroupsCtrl', function($scope, $state) {
    /*
    /exception_groups
    */

  });

  c.controller('LogGroupsCtrl', function($scope, $state) {
    /*
    /log_groups
    */

  });

}).call(this);
