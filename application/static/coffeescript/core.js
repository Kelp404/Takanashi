// Generated by CoffeeScript 1.6.3
(function() {
  var core, user_agent;

  core = {
    /*
    core JavaScript object.
    */

    text_loading: 'Loading...',
    is_ie: false,
    is_safari: false,
    setup: function() {
      /*
      setup core
      */

      this.setup_nav();
      this.setup_link();
      this.setup_enter_submit();
      return window.onpopstate = function(e) {
        return core.pop_state(e.state);
      };
    },
    pop_state: function(state) {
      /*
      pop state
      */

      if (state) {
        $('.modal.in').modal('hide');
        state.is_pop = true;
        this.miko(state, false);
      }
    },
    miko: function(state, push) {
      /*
      みこ
      :param state: history.state
      :param push: true -> push into history, false do not push into history
      */

      var before_index;
      before_index = $('#js_navigation li.active').index();
      if (state.method == null) {
        state.method = 'get';
      }
      if (state.method !== 'get') {
        push = false;
      }
      $.ajax({
        url: state.href,
        type: state.method,
        cache: false,
        data: state.data,
        async: !(core.is_safari && state.is_pop),
        beforeSend: function(xhr) {
          var index;
          index = state.href === '/' ? 0 : $('#js_navigation li a[href*="' + state.href + '"]').parent().index();
          core.nav_select(index);
          xhr.setRequestHeader('X-ajax', 'ajax');
          return core.loading_on(core.text_loading);
        },
        error: function() {
          core.loading_off();
          core.error_message();
          return core.nav_select(before_index);
        },
        success: function(r) {
          var $ajax, is_ajax;
          core.loading_off();
          if (push) {
            if (state.href !== location.pathname || location.href.indexOf('?') >= 0) {
              state.nav_select_index = $('#js_navigation li.active').index();
              history.pushState(state, document.title, state.href);
            }
            $('html, body').animate({
              scrollTop: 0
            }, 500, 'easeOutExpo');
          }
          is_ajax = r.match(/<!ajax>/);
          if (!is_ajax) {
            location.reload();
            return;
          }
          r = r.replace(/<!ajax>/, '');
          $ajax = $('<div id="js_root">' + r + '</div>');
          document.title = $ajax.find('title').text();
          window.cc = $ajax;
          $ajax.find('.js_ajax').each(function() {
            var target;
            target = $(this).attr('data-ajax-target');
            $('#' + target).html($(this).find('#' + target).html());
            return $('#' + target).attr('class', $(this).find('#' + target).attr('class'));
          });
          return core.after_page_loaded();
        }
      });
      return false;
    },
    error_message: function() {
      /*
      pop error message.
      */

      return $.av.pop({
        title: 'Error',
        message: 'Loading failed, please try again later.',
        template: 'error'
      });
    },
    validation: function($form) {
      /*
      validation
      */

      var success;
      success = true;
      $form.find('input, textarea').each(function() {
        var validation;
        validation = $(this).attr('validation');
        if (validation && validation.length > 0) {
          if ($(this).val().match(validation)) {
            $(this).closest('.control-group').removeClass('error');
            return $(this).parent().find('.error_msg').remove();
          } else {
            $(this).closest('.control-group').addClass('error');
            $(this).parent().find('.error_msg').remove();
            if ($(this).attr('msg')) {
              $(this).parent().append($('<label for="' + $(this).attr('id') + '" class="error_msg help-inline">' + $(this).attr('msg') + '</label>'));
            }
            return success = false;
          }
        }
      });
      return success;
    },
    loading_on: function(message) {
      /*
      loading
      */

      var loading, loading_height;
      $('body, a, .table-pointer tbody tr').css({
        cursor: 'wait'
      });
      if (core.is_ie) {
        return;
      }
      if ($('#loading').length > 0) {
        $('#loading .message').html(message);
        return;
      }
      loading = $('<div id="loading"><div class="spin"></div><div class="message">' + message + '</div><div class="clear"></div></div>');
      $('body').append(loading);
      loading_height = $('#loading').height();
      $('#loading').css({
        bottom: -loading_height
      });
      $('#loading').animate({
        bottom: '+=' + (loading_height + 10)
      }, 400, 'easeOutExpo');
      return Spinner({
        color: '#444',
        width: 2,
        length: 4,
        radius: 4
      }).spin($('#loading .spin')[0]);
    },
    loading_off: function() {
      var loading_height;
      $('body').css({
        cursor: 'default'
      });
      $('a, .table-pointer tbody tr').css({
        cursor: 'pointer'
      });
      if (core.is_ie) {
        return;
      }
      $('#loading').dequeue();
      loading_height = $('#loading').height() + 10;
      return $('#loading').animate({
        bottom: '-=' + loading_height
      }, 400, 'easeInExpo', function() {
        return $(this).remove();
      });
    },
    nav_select: function(index, animate) {
      /*
      navigation
      */

      if (animate == null) {
        animate = true;
      }
      if (index > 0 && !$($('#js_navigation li')[index]).hasClass('select')) {
        $('#js_navigation li').removeClass('select');
        $($('#js_navigation li')[index]).addClass('select');
        if (animate) {
          return $($('#js_navigation li')[index]).mouseover();
        } else {
          return $('#js_navigation li.cs_top').each(function() {
            return $(this).dequeue();
          }).animate({
            width: $('#js_navigation li.select').css('width'),
            left: $('#js_navigation li.select').position().left
          }, 0);
        }
      }
    },
    setup_nav: function() {
      var index, match, noop;
      match = location.href.match(/\w(\/\w*)/);
      if (match) {
        index = match[1] === '/' ? 0 : $('#js_navigation li a[href*="' + match[1] + '"]').parent().index();
        $('#js_navigation li').removeClass('select');
        $($('#js_navigation li')[index]).addClass('select');
      }
      $('#js_navigation li.select').parent().prepend($('<li class="cs_top"></li>'));
      $('#js_navigation li.cs_top').css({
        width: $('#js_navigation li.select').css('width'),
        left: $('#js_navigation li.select').position().left,
        top: $('#js_navigation li.select').position().top
      });
      noop = function() {};
      $('#js_navigation li[class!=cs_top]').hover(function() {
        return $('#js_navigation li.cs_top').each(function() {
          return $(this).dequeue();
        }).animate({
          width: this.offsetWidth,
          left: this.offsetLeft
        }, 420, "easeInOutCubic");
      }, noop());
      return $('#js_navigation').hover(noop(), function() {
        return $('#js_navigation li.cs_top').each(function() {
          return $(this).dequeue();
        }).animate({
          width: $('#js_navigation li.select').css('width'),
          left: $('#js_navigation li.select').position().left
        }, 420, "easeInOutCubic");
      });
    },
    setup_link: function() {
      /*
      setup hyper links and forms to ajax and push history.
      */

      if (this.is_ie) {
        return;
      }
      $(document).on('click', 'a:not([href*="#"])', function(e) {
        var href;
        if (e.metaKey) {
          return;
        }
        href = $(this).attr('href');
        if (href && !$(this).attr('target')) {
          core.miko({
            href: href
          }, true);
          return false;
        }
      });
      $(document).on('submit', 'form[method=get]:not([action*="#"])', function() {
        var href;
        href = $(this).attr('action') + '?' + $(this).serialize();
        core.miko({
          href: href
        }, true);
        $('.modal.in').modal('hide');
        return false;
      });
      return $(document).on('submit', 'form[method=post]:not([action*="#"])', function() {
        var href;
        if (core.validation($(this))) {
          href = $(this).attr('action');
          core.miko({
            href: href,
            data: $(this).serialize(),
            method: 'post'
          });
          $('.modal.in').modal('hide');
        }
        return false;
      });
    },
    setup_enter_submit: function() {
      /*
      .enter-submit.keypress() Ctrl + Enter then submit the form
      */

      return $(document).on('keypress', '.enter-submit', function(e) {
        if (e.keyCode === 13 && e.ctrlKey) {
          $(this).closest('form').submit();
          return false;
        }
      });
    },
    after_page_loaded: function() {
      /*
      events of views
      */

      core.setup_datetime();
      core.setup_focus();
      return core.setup_tooltip();
    },
    setup_datetime: function() {
      /*
      datetime
      */

      return $('.datetime').each(function() {
        var date;
        try {
          date = new Date($(this).attr('datetime'));
          return $(this).html(date.toFormat($(this).attr('format')));
        } catch (_error) {}
      });
    },
    setup_focus: function() {
      /*
      focus
      */

      return $('.focus').select();
    },
    setup_tooltip: function() {
      /*
      tool tip
      */

      return $('[rel="tooltip"]').tooltip();
    }
  };

  window.core = core;

  user_agent = navigator.userAgent.toLowerCase();

  core.is_ie = user_agent.indexOf('msie') !== -1;

  core.is_safari = user_agent.indexOf('safari') !== -1 && user_agent.indexOf('chrome') === -1;

}).call(this);
